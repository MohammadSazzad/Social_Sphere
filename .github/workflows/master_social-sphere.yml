# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - social-sphere

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Cache Backend dependencies
        uses: actions/cache@v3
        with:
          path: Backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('Backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install Backend dependencies
        run: |
          cd Backend
          npm ci --only=production

      - name: Create deployment package
        run: |
          # Create a deployment directory
          mkdir deployment
          
          # Copy Backend files (excluding node_modules, .env, and unnecessary files)
          cp -R Backend/* deployment/
          
          # Copy package files for production
          cp Backend/package*.json deployment/
          
          # Create web.config for Azure App Service (if needed)
          cat > deployment/web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <webSocket enabled="false" />
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
              <security>
                <requestFiltering>
                  <hiddenSegments>
                    <remove segment="bin"/>
                  </hiddenSegments>
                </requestFiltering>
              </security>
              <httpErrors existingResponse="PassThrough" />
              <iisnode watchedFiles="web.config;*.js"/>
            </system.webServer>
          </configuration>
          EOF

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1E046F185D55447F80E8476E16F3595D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D12D92930B12450CAA9D2DA86C4E8533 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_BFBA908AF0A340599980D8800EC864D5 }}

      - name: Set Azure App Service Environment Variables
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            # Configure App Service environment variables
            az webapp config appsettings set --resource-group "your-resource-group" --name "social-sphere" --settings \
              NODE_ENV="production" \
              SCM_DO_BUILD_DURING_DEPLOYMENT="true" \
              WEBSITE_NODE_DEFAULT_VERSION="20.x" \
              DB_CONNECTION_STRING="${{ secrets.DB_CONNECTION_STRING }}" \
              SENDGRID_API_KEY="${{ secrets.SENDGRID_API_KEY }}" \
              VERIFIED_SENDER_EMAIL="${{ secrets.VERIFIED_SENDER_EMAIL }}" \
              ACCESS_TOKEN="${{ secrets.ACCESS_TOKEN }}" \
              CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
              CLOUDINARY_API_KEY="${{ secrets.CLOUDINARY_API_KEY }}" \
              CLOUDINARY_API_SECRET="${{ secrets.CLOUDINARY_API_SECRET }}" \
              AZURE_VISION_ENDPOINT="${{ secrets.AZURE_VISION_ENDPOINT }}" \
              AZURE_VISION_KEY="${{ secrets.AZURE_VISION_KEY }}" \
              CORS_ORIGIN="${{ secrets.CORS_ORIGIN }}" \
              ADULT_THRESHOLD="0.5" \
              RACY_THRESHOLD="0.4" \
              ENABLE_IMAGE_MODERATION="true" \
              STRICT_MODERATION="false"

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'social-sphere'
          slot-name: 'Production'
          package: .
          